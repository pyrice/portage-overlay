--- Source/WebCore/platform/graphics/texmap/TextureMapperGL.cpp.orig	2015-12-06 14:28:34.377627865 -0800
+++ Source/WebCore/platform/graphics/texmap/TextureMapperGL.cpp	2015-12-06 14:36:14.198126060 -0800
@@ -20,9 +20,9 @@
  */
 
 #include "config.h"
-#include "TextureMapperGL.h"
 
 #if USE(TEXTURE_MAPPER_GL)
+#include "TextureMapperGL.h"
 
 #include "BitmapTextureGL.h"
 #include "BitmapTexturePool.h"
--- Source/WebCore/platform/graphics/texmap/TextureMapperShaderProgram.cpp.orig	2015-12-06 14:36:40.588916227 -0800
+++ Source/WebCore/platform/graphics/texmap/TextureMapperShaderProgram.cpp	2015-12-06 15:56:32.063442523 -0800
@@ -20,9 +20,9 @@
  */
 
 #include "config.h"
-#include "TextureMapperShaderProgram.h"
 
 #if USE(TEXTURE_MAPPER_GL)
+#include "TextureMapperShaderProgram.h"
 
 #include "LengthFunctions.h"
 #include "Logging.h"
--- Source/WebKit2/UIProcess/API/gtk/WebKitWebViewBase.cpp.orig	2015-12-06 16:12:25.161913547 -0800
+++ Source/WebKit2/UIProcess/API/gtk/WebKitWebViewBase.cpp	2015-12-06 16:06:28.931400354 -0800
@@ -1402,21 +1402,24 @@
     // Queue a resize to ensure the new DrawingAreaProxy is resized.
     gtk_widget_queue_resize_no_redraw(GTK_WIDGET(webkitWebViewBase));
 
-#if PLATFORM(X11) && USE(TEXTURE_MAPPER)
+#if PLATFORM(X11) && (USE(REDIRECTED_XCOMPOSITE_WINDOW) || USE(TEXTURE_MAPPER_GL))
     if (PlatformDisplay::sharedDisplay().type() != PlatformDisplay::Type::X11)
         return;
 
     WebKitWebViewBasePrivate* priv = webkitWebViewBase->priv;
     DrawingAreaProxyImpl* drawingArea = static_cast<DrawingAreaProxyImpl*>(priv->pageProxy->drawingArea());
     ASSERT(drawingArea);
+    Window native;
 #if USE(REDIRECTED_XCOMPOSITE_WINDOW)
     if (!priv->redirectedWindow)
         return;
     uint64_t windowID = priv->redirectedWindow->windowID();
-#else
+    native = windowID;
+#elif USE(TEXTURE_MAPPER_GL)
     if (!gtk_widget_get_realized(GTK_WIDGET(webkitWebViewBase)))
         return;
     uint64_t windowID = GDK_WINDOW_XID(gtk_widget_get_window(GTK_WIDGET(webkitWebViewBase)));
+    native = windowID;
 #endif
     drawingArea->setNativeSurfaceHandleForCompositing(windowID);
 #else
--- Source/WebKit2/WebProcess/WebPage/LayerTreeHost.cpp.orig	2015-12-06 16:14:26.618874823 -0800
+++ Source/WebKit2/WebProcess/WebPage/LayerTreeHost.cpp	2015-12-06 16:14:57.919812809 -0800
@@ -48,6 +48,7 @@
     return LayerTreeHostGtk::create(webPage);
 #else
     UNUSED_PARAM(webPage);
+    ASSERT_NOT_REACHED();
     return 0;
 #endif
 }
